var searchIndex = JSON.parse('{\
"cairo_rs":{"doc":"","t":[14,14,14,0,0,0,14,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,5,5,5,5,5,3,3,3,11,12,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,17,5,5,5,5,5,5,5,13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,3,12,11,11,12,11,11,11,12,11,10,11,11,11,11,11,12,12,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,3,3,3,3,3,3,13,3,3,3,3,4,3,3,13,3,13,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,11,11,11,11,11,11,11,5,5,11,11,11,11,11,0,0,0,0,0,0,0,0,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,4,4,4,4,13,13,13,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,12,12,11,12,11,11,12,11,11,11,11,12,12,12,11,12,11,12,12,12,11,11,11,11,11,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,0,0,0,0,0,0,0,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,0,0,13,3,4,13,3,13,3,13,3,13,3,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,3,3,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11],"n":["any_box","bigint","bigint_str","cairo_run","hint_processor","math_utils","relocatable","serde","types","utils","vm","cairo_run","write_binary_memory","write_binary_trace","write_output","builtin_hint_processor","hint_processor_definition","hint_processor_utils","blake2s_hash","blake2s_utils","builtin_hint_processor_definition","cairo_keccak","dict_hint_utils","dict_manager","find_element_hint","hint_code","hint_utils","keccak_utils","math_utils","memcpy_hint_utils","memset_utils","pow_utils","secp","segments","set","sha256_utils","squash_dict_utils","uint256_utils","usort","IV","blake2s_compress","blake2s_add_uint256","blake2s_add_uint256_bigend","compute_blake2s","finalize_blake2s","BuiltinHintProcessor","HintFunc","HintProcessorData","add_hint","ap_tracking","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","execute_hint","extra_hints","from","from","from","ids_data","into","into","into","new","new_default","new_empty","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","keccak_hints","block_permutation","cairo_keccak_finalize","compare_bytes_in_word_nondet","compare_keccak_full_rate_in_bytes_nondet","keccak_write_args","DICT_ACCESS_SIZE","default_dict_new","dict_new","dict_read","dict_squash_copy_dict","dict_squash_update_ptr","dict_update","dict_write","DefaultDictionary","DictManager","DictTracker","Dictionary","SimpleDictionary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_ptr","data","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","get_dictionary_copy","get_tracker","get_tracker_mut","get_value","insert_value","into","into","into","new","new_default_dict","new_default_dict","new_dict","new_empty","new_with_initial","to_owned","to_owned","to_owned","trackers","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","default_value","dict","find_element","search_sorted_lower","get_address_from_var_name","get_integer_from_var_name","get_ptr_from_var_name","get_reference_from_var_name","get_relocatable_from_var_name","insert_value_from_var_name","insert_value_into_ap","unsafe_keccak","unsafe_keccak_finalize","assert_250_bit","assert_le_felt","assert_le_felt_excluded_0","assert_le_felt_excluded_1","assert_le_felt_excluded_2","assert_lt_felt","assert_nn","assert_not_equal","assert_not_zero","is_le_felt","is_nn","is_nn_out_of_range","is_positive","signed_div_rem","split_felt","split_int","split_int_assert_range","sqrt","unsigned_div_rem","add_segment","enter_scope","exit_scope","memcpy_continue_copying","memcpy_enter_scope","memset_continue_loop","memset_enter_scope","pow","bigint_utils","ec_utils","field_utils","secp_utils","signature","bigint_to_uint256","nondet_bigint3","compute_doubling_slope","compute_slope","ec_double_assign_new_x","ec_double_assign_new_y","ec_mul_inner","ec_negate","fast_ec_add_assign_new_x","fast_ec_add_assign_new_y","is_zero_assign_scope_variables","is_zero_nondet","is_zero_pack","reduce","verify_zero","BASE_86","BETA","N0","N1","N2","P0","P1","P2","SECP_REM","pack","pack_from_relocatable","pack_from_var_name","split","div_mod_n_packed_divmod","div_mod_n_safe_div","get_point_from_x","relocate_segment","temporary_array","set_add","sha256_finalize","sha256_input","sha256_main","squash_dict","squash_dict_inner_assert_len_keys","squash_dict_inner_check_access_index","squash_dict_inner_continue_loop","squash_dict_inner_first_iteration","squash_dict_inner_len_assert","squash_dict_inner_next_key","squash_dict_inner_skip_loop","squash_dict_inner_used_accesses_assert","split_64","uint256_add","uint256_signed_nn","uint256_sqrt","uint256_unsigned_div_rem","usort_body","usort_enter_scope","verify_multiplicity_assert","verify_multiplicity_body","verify_usort","HintProcessor","HintReference","ap_tracking_data","borrow","borrow_mut","cairo_type","clone","clone_into","compile_hint","dereference","eq","execute_hint","fmt","from","into","new","new_simple","offset1","offset2","to_owned","try_from","try_into","type_id","vzip","bigint_to_u32","bigint_to_usize","compute_addr_from_reference","get_integer_from_reference","get_ptr_from_reference","insert_value_from_reference","as_int","div_mod","ec_add","ec_double","ec_double_slope","isqrt","line_slope","safe_div","safe_div_usize","deserialize_program","deserialize_utils","ApTracking","Attribute","DebugInfo","FlowTrackingData","HintLocation","HintParams","Identifier","Immediate","InputFile","InstructionLocation","Location","Member","OffsetValue","ProgramJson","Reference","Reference","ReferenceManager","Value","ValueAddress","accessible_scopes","ap_tracking","ap_tracking_data","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","cairo_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","data","debug_info","default","dereference","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_array_of_bigint_hex","deserialize_bigint_hex","deserialize_map_to_string_and_usize_hashmap","deserialize_program","deserialize_program_json","deserialize_value_address","end_col","end_line","end_pc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filename","flow_tracking_data","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full_name","get_location_marks","group","hints","hints","identifiers","input_file","inst","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","location","members","n_prefix_newlines","name","new","no_hint_reference_default","offset","offset","offset1","offset2","parent_location","pc","pc","prime","reference_ids","reference_manager","references","start_col","start_line","start_pc","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_with_content","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value_address","value_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BigIntError","IntError","InvalidStringError","ReferenceParseError","borrow","borrow_mut","eq","fmt","fmt","from","into","maybe_add_padding","parse_value","to_string","try_from","try_into","type_id","vzip","errors","exec_scope","instance_definitions","instruction","layout","program","relocatable","program_errors","ConstWithoutValue","EntrypointNotFound","IO","Parse","ProgramError","borrow","borrow_mut","fmt","fmt","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","ExecutionScopes","assign_or_update_variable","borrow","borrow_mut","data","default","delete_variable","enter_scope","exit_scope","from","get","get_any_boxed_mut","get_any_boxed_ref","get_dict_manager","get_list","get_list_ref","get_local_variables","get_local_variables_mut","get_mut_dict_ref","get_mut_list_ref","get_mut_ref","get_ref","insert_box","insert_value","into","new","try_from","try_into","type_id","vzip","bitwise_instance_def","builtins_instance_def","cpu_instance_def","diluted_pool_instance_def","ec_op_instance_def","ecdsa_instance_def","keccak_instance_def","pedersen_instance_def","range_check_instance_def","AP","AP","APPlus2","Add","Add","Add1","Add2","ApUpdate","AssertEq","Call","Dst","FP","FP","FpUpdate","Imm","Instruction","Jnz","Jump","JumpRel","Mul","NOp","Op0","Op1","Op1Addr","Opcode","PcUpdate","Register","Regular","Regular","Regular","Res","Ret","Unconstrained","ap_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","dst_register","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fp_update","from","from","from","from","from","from","from","from","imm","into","into","into","into","into","into","into","into","off0","off1","off2","op0_register","op1_addr","opcode","pc_update","res","size","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Program","borrow","borrow_mut","builtins","clone","clone_into","constants","data","default","end","eq","equivalent","error_message_attributes","fmt","from","from_file","from_reader","hints","identifiers","instruction_locations","into","main","new","prime","reference_manager","start","to_owned","try_from","try_into","type_id","vzip","Int","MaybeRelocatable","Relocatable","RelocatableValue","add","add","add","add","add_int_mod","add_int_mod","add_maybe_mod","add_mod","add_usize_mod","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","divmod","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_int_ref","get_relocatable","hash","hash","into","into","mod_floor","offset","partial_cmp","partial_cmp","relocate_address","relocate_value","segment_index","sub","sub","sub_rel","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","from_relocatable_to_indexes","is_subsequence","to_field_element","context","decoding","errors","runners","security","trace","vm_core","vm_memory","run_context","RunContext","borrow","borrow_mut","compute_dst_addr","compute_op0_addr","compute_op1_addr","from","get_ap","get_fp","get_pc","into","try_from","try_into","type_id","vzip","decoder","decode_instruction","cairo_run_errors","exec_scope_errors","memory_errors","runner_errors","trace_errors","vm_errors","vm_exception","CairoRunError","MemoryError","Program","Runner","Trace","VirtualMachine","VmException","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","ExecScopeError","ExitMainScopeError","NoScopeError","borrow","borrow_mut","eq","equivalent","fmt","fmt","from","hash","into","provide","to_string","try_from","try_into","type_id","vzip","AddressInTemporarySegment","AddressNotInTemporarySegment","AddressNotRelocatable","DuplicatedRelocation","EffectiveSizesNotCalled","ErrorCalculatingMemoryUnits","ErrorParsingPubKey","ErrorRetrievingMessage","ErrorVerifyingSignature","FoundNonInt","GetRangeMemoryGap","InconsistentMemory","InitializingVerifyingKey","InsufficientAllocatedCells","InvalidMemoryValue","InvalidSignature","MemoryError","MissingAccessedAddresses","MissingMemoryCells","MissingMemoryCellsWithOffsets","MissingSegmentUsedSizes","NonZeroOffset","NumOutOfBounds","Relocation","SegmentNotFinalized","SignatureNotFound","TemporarySegmentInRelocation","UnallocatedSegment","WriteArg","borrow","borrow_mut","eq","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","BaseNotFinished","BuiltinNotIncluded","BuiltinSegmentNameCollision","DisorderedBuiltins","EcOpBuiltinScalarLimit","EcOpSameXCoordinate","ExpectedInteger","FailedAddingReturnValues","FailedMemoryGet","FailedStringConversion","FinalStack","FinalizeNoEndRun","FinalizeSegements","FinalizeSegmentsNoProofMode","FoundNonInt","IntegerBiggerThanPowerOfTwo","InvalidLayoutName","InvalidStopPointer","MaybeRelocVecToU64ArrayError","MemoryError","MemoryGet","MemoryInitializationError","MemoryValidationError","MissingBuiltin","MissingMain","NoAP","NoBuiltinForInstance","NoExecBase","NoExecBaseForEntrypoint","NoExecPublicMemory","NoFP","NoPC","NoProgBase","NoProgramEnd","NoProgramStart","NonRelocatableAddress","PointNotOnCurve","RunAlreadyFinished","RunnerError","RunnerInTemporarySegment","SafeDivFailUsize","SliceToArrayError","UninitializedBase","WriteFail","borrow","borrow_mut","eq","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","AlreadyRelocated","MemoryError","NoRelocationFound","RegNotRelocatable","TraceError","TraceNotEnabled","borrow","borrow_mut","eq","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","ArcTooBig","AssertLtFelt","AssertNotEqualFail","AssertNotZero","AssertionFailed","BigintToU32Fail","BigintToU64Fail","BigintToUsizeFail","CantCreateDictionaryOnTakenSegment","CantSubOffset","CantWriteReturnFp","CantWriteReturnPc","CompileHintFail","CouldntPopPositions","CurrentAccessIndicesNotEmpty","CustomHint","DiffAssertValues","DiffIndexComp","DiffIndexSub","DiffTypeComparison","DividedByZero","EmptyAccessIndices","EmptyCurrentAccessIndices","EmptyKeys","EndOfProgram","ErrorMessageAttribute","ExcludedNot2","ExpectedIntAtRange","ExpectedInteger","ExpectedRelocatable","FailedToComputeOperands","FailedToGetConstant","FailedToGetIds","FailedToGetSqrt","FindElemMaxSize","FixedSizeArrayFail","Hint","ImmShouldBe1","InconsistentAutoDeduction","InvalidApUpdate","InvalidApValue","InvalidArgCount","InvalidBlockSize","InvalidHintEncoding","InvalidIndex","InvalidInstructionEncoding","InvalidKeccakInputLength","InvalidKeccakStateSizeFelts","InvalidOp1Reg","InvalidOpcode","InvalidPcUpdate","InvalidRes","InvalidSetRange","InvalidTrackingGroup","InvalidWordSize","KeccakMaxSize","KeyNotFound","KeysNotEmpty","LastPosNotFound","MainScopeError","MemoryError","MemoryGet","MismatchedDictPtr","MissingConstant","NAccessesTooBig","NoDictTracker","NoDst","NoImm","NoInitialDict","NoKeyInAccessIndices","NoRangeCheckBuiltin","NoRegisterInReference","NoSignatureBuiltin","NoValueForKey","NonLeFelt","NoneApTrackingData","NoneInMemoryRange","NotImplemented","NumUsedAccessesAssertFail","OffsetExceeded","OutOfValidRange","PositionsLengthNotZero","PositionsNotFound","PtrDiffNotDivisibleByDictAccessSize","PureValue","RelocatableAdd","RunNotFinished","RunnerError","SafeDivFail","SafeDivFailUsize","ScopeError","SecpSplitNegative","SecpSplitutOfRange","SecpVerifyZero","SliceToArrayError","SplitIntLimbOutOfRange","SplitIntNotZero","SqrtNegative","SquashDictMaxSizeExceeded","TracerError","UnconstrainedResAdd","UnconstrainedResAssertEq","UnconstrainedResJump","UnconstrainedResJumpRel","UnexpectedPositionsDictFail","UnknownHint","UnknownOp0","UsizeToU32Fail","UsortOutOfRange","ValueNotPositive","ValueOutOfRange","ValueOutside250BitRange","ValueOutsideValidRange","VariableNotInScopeError","VirtualMachineError","WrongHintData","WrongPrevValue","borrow","borrow_mut","eq","fmt","fmt","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","VmException","borrow","borrow_mut","eq","fmt","fmt","from","from_vm_error","get_error_attr_value","get_location","get_traceback","into","provide","to_string","try_from","try_into","type_id","vzip","builtin_runner","cairo_runner","Bitwise","BitwiseBuiltinRunner","BuiltinRunner","EcOp","EcOpBuiltinRunner","Hash","HashBuiltinRunner","Keccak","KeccakBuiltinRunner","Output","OutputBuiltinRunner","RangeCheck","RangeCheckBuiltinRunner","Signature","SignatureBuiltinRunner","_bound","add_signature","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","add_validation_rule","as_any","base","base","base","base","base","base","base","base","base","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","deduce_memory_cell","default","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","final_stack","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_allocated_memory_units","get_memory_accesses","get_memory_accesses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_memory_segment_addresses","get_range_check_usage","get_range_check_usage","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_cells_and_allocated_size","get_used_diluted_check_units","get_used_diluted_check_units","get_used_diluted_check_units","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_instances","get_used_perm_range_check_units","get_used_perm_range_check_units","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initial_stack","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","initialize_segments","into","into","into","into","into","into","into","into","new","new","new","ratio","ratio","ratio","ratio","ratio","ratio","ratio","run_security_checks","set_stop_ptr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CairoRunner","ExecutionResources","SegmentInfo","add_additional_hash_builtin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builtin_instance_counter","check_diluted_check_usage","check_memory_usage","check_range_check_usage","check_used_cells","clone","clone","clone_into","clone_into","end_run","eq","eq","equivalent","equivalent","exec_scopes","finalize_segments","fmt","fmt","from","from","from","get_builtin_segments_info","get_constants","get_execution_resources","get_hint_data_dictionary","get_initial_fp","get_memory_holes","get_output","get_perm_range_check_limits","get_program_builtins","get_reference_list","index","initialize","initialize_builtins","initialize_function_entrypoint","initialize_function_runner","initialize_segments","initialize_vm","into","into","into","n_memory_holes","n_steps","new","original_steps","read_return_values","relocate","relocated_memory","relocated_trace","run_for_steps","run_from_entrypoint","run_until_next_power_of_2","run_until_pc","run_until_steps","set_entrypoint","size","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_output","verify_secure_runner","get_perm_range_check_limits","trace_entry","RelocatedTraceEntry","TraceEntry","ap","ap","borrow","borrow","borrow_mut","borrow_mut","deserialize","eq","eq","fmt","fmt","fp","fp","from","from","into","into","pc","pc","relocate_trace_register","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DeducedOperands","HintData","Operands","OperandsAddresses","VirtualMachine","add_memory_segment","add_relocation_rule","add_temporary_segment","ap_tracking_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_effective_sizes","compute_operands","default","disable_trace","end_run","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","gen_arg","gen_typed_args","get_ap","get_builtin_runners","get_builtin_runners_as_mut","get_continuous_range","get_fp","get_integer","get_integer_range","get_maybe","get_pc","get_prime","get_range","get_range_check_builtin","get_relocatable","get_return_values","get_segment_used_size","get_signature_builtin","hint_code","ids","insert_value","into","into","into","into","into","load_data","mark_address_range_as_accessed","new","new","step","step_hint","step_instruction","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_auto_deductions","vzip","vzip","vzip","vzip","vzip","write_arg","memory","memory_segments","Memory","ValidationRule","add_validation_rule","borrow","borrow","borrow_mut","borrow_mut","data","default","from","from","get_continuous_range","get_integer","get_integer_range","get_range","get_relocatable","insert","insert_value","into","into","new","relocate_memory","temp_data","try_from","try_from","try_into","try_into","type_id","type_id","validate_existing_memory","validated_addresses","vzip","vzip","MemorySegmentManager","add","add_temporary_segment","borrow","borrow_mut","compute_effective_sizes","default","eq","equivalent","fmt","from","gen_arg","gen_typed_args","get_memory_holes","get_segment_size","get_segment_used_size","into","is_valid_memory_value","load_data","new","num_segments","num_temp_segments","public_memory_offsets","relocate_segments","segment_sizes","segment_used_sizes","try_from","try_into","type_id","vzip","write_arg"],"q":["cairo_rs","","","","","","","","","","","cairo_rs::cairo_run","","","","cairo_rs::hint_processor","","","cairo_rs::hint_processor::builtin_hint_processor","","","","","","","","","","","","","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::blake2s_hash","","cairo_rs::hint_processor::builtin_hint_processor::blake2s_utils","","","","cairo_rs::hint_processor::builtin_hint_processor::builtin_hint_processor_definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::cairo_keccak","cairo_rs::hint_processor::builtin_hint_processor::cairo_keccak::keccak_hints","","","","","cairo_rs::hint_processor::builtin_hint_processor::dict_hint_utils","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::dict_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::dict_manager::Dictionary","","cairo_rs::hint_processor::builtin_hint_processor::find_element_hint","","cairo_rs::hint_processor::builtin_hint_processor::hint_utils","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::keccak_utils","","cairo_rs::hint_processor::builtin_hint_processor::math_utils","","","","","","","","","","","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::memcpy_hint_utils","","","","","cairo_rs::hint_processor::builtin_hint_processor::memset_utils","","cairo_rs::hint_processor::builtin_hint_processor::pow_utils","cairo_rs::hint_processor::builtin_hint_processor::secp","","","","","cairo_rs::hint_processor::builtin_hint_processor::secp::bigint_utils","","cairo_rs::hint_processor::builtin_hint_processor::secp::ec_utils","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::secp::field_utils","","","","","cairo_rs::hint_processor::builtin_hint_processor::secp::secp_utils","","","","","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::secp::signature","","","cairo_rs::hint_processor::builtin_hint_processor::segments","","cairo_rs::hint_processor::builtin_hint_processor::set","cairo_rs::hint_processor::builtin_hint_processor::sha256_utils","","","cairo_rs::hint_processor::builtin_hint_processor::squash_dict_utils","","","","","","","","","cairo_rs::hint_processor::builtin_hint_processor::uint256_utils","","","","","cairo_rs::hint_processor::builtin_hint_processor::usort","","","","","cairo_rs::hint_processor::hint_processor_definition","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::hint_processor::hint_processor_utils","","","","","","cairo_rs::math_utils","","","","","","","","","cairo_rs::serde","","cairo_rs::serde::deserialize_programcairo_rs::serde::deserialize_utils","","","","","","","","","","","","","","","","","","cairo_rs::types","","","","","","","cairo_rs::types::errors","cairo_rs::types::errors::program_errors","","","","","","","","","","","","","","","","","","","","cairo_rs::types::exec_scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::types::instance_definitions","","","","","","","","","cairo_rs::types::instruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::types::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::types::relocatable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::utils","","","cairo_rs::vm","","","","","","","","cairo_rs::vm::context","cairo_rs::vm::context::run_context","","","","","","","","","","","","","","","cairo_rs::vm::decoding","cairo_rs::vm::decoding::decoder","cairo_rs::vm::errors","","","","","","","cairo_rs::vm::errors::cairo_run_errors","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::exec_scope_errors","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::memory_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::runner_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::trace_errors","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::vm_errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::errors::vm_exception","","","","","","","","","","","","","","","","","","cairo_rs::vm::runners","","cairo_rs::vm::runners::builtin_runnercairo_rs::vm::runners::cairo_runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::security","cairo_rs::vm::trace","","cairo_rs::vm::trace::trace_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::vm_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::vm_memory","","cairo_rs::vm::vm_memory::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cairo_rs::vm::vm_memory::memory_segments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Writes a trace as a binary file. Bincode encodes to little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages dictionaries in a Cairo program. Uses the segment …","Tracks the python dict associated with a Cairo dict.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Tries to convert a BigInt value to u32","","Computes the memory address of the ids variable indicated …","Returns the Integer value stored in the given ids variable","Returns the Relocatable value stored in the given ids …","Inserts value into the address of the given ids variable","Returns the lift of the given field element, val, as an …","Finds a nonnegative integer x &lt; p such that (m * x) % p == …","Gets two points on an elliptic curve mod p and returns …","Doubles a point on an elliptic curve with the equation y^2 …","Computes the slope of an elliptic curve with the equation …","Returns the integer square root of the nonnegative integer …","Computes the slope of the line connecting the two given EC …","Performs integer division between x and y; fails if x is …","Performs integer division between x and y; fails if x is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints the location with the passed message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Creates or updates an existing variable given its name and …","","","","","Removes a variable from the current scope given its name","","","Returns the argument unchanged.","Returns the value in the current execution scope that …","Returns the value in the current execution scope that …","Returns the value in the current execution scope that …","Returns the value in the dict manager","Returns the value in the current execution scope that …","Returns a reference to the value in the current execution …","Returns a dictionary containing the variables present in …","Returns a mutable reference to the dictionary containing …","Returns a mutable reference to the value in the current …","Returns a mutable reference to the value in the current …","Returns a mutable reference to the value in the current …","Returns a reference to the value in the current execution …","Inserts the boxed value into the current scope","Inserts the value into the current scope","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Adds a bigint to self, then performs mod prime","Adds a bigint to self, then performs mod prime","Adds a MaybeRelocatable to self, then performs mod prime …","Adds a MaybeRelocatable to self, then performs mod prime …","Adds a usize to self, then performs mod prime if prime is …","","","","","","","","","Performs integer division and module on a …","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs mod floor for a MaybeRelocatable::Int with BigInt.","","","","","Turns a MaybeRelocatable into a BigInt value. If the value …","","","Substracts two MaybeRelocatable values and returns the …","","","","","","","","","","","","","","","","","","Converts val to an integer in the range (-prime/2, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Decodes an instruction. The encoding is little endian, so …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the builtin’s base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the builtin’s allocated memory units","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of range check units used by the …","Returns the number of range check units used by the …","","","","","","","","","","","","","","","","Creates the necessary segments for the builtin in the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add (or replace if already present) a custom hash builtin. …","","","","","","","","Check if there are enough trace cells to fill the entire …","","Checks that there are enough trace cells to fill the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets the data used by the HintProcessor to execute each …","","Count the number of holes present in the segments.","","","","","","","","","","Creates the necessary segments for the program, execution, …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Execute an exact number of steps on the program from the …","","Execute steps until the step counter reaches a power of …","","Execute steps until a number of steps since the start of …","Overrides the previous entrypoint with a custom one, or “…","","","","","","","","","","","","","","","","Writes the values hosted in the output builtin’s segment.","Verify that the completed run in a runner is safe to be …","Return the minimum and maximum values in the …","","","A trace entry for every instruction that was executed. …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Adds a new segment and to the VirtualMachine.memory …","Add a new relocation rule.","","","","","","","","","","","","","","","","","Proxy to MemorySegmentManager::compute_effective_sizes() …","Compute operands and result, trying to deduce them if …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a reference to the vector with all builtins …","","Gets n elements from memory starting from addr (n being …","","Gets the integer value corresponding to the Relocatable …","Gets n integer values from memory starting from addr (n …","Gets a MaybeRelocatable value from memory indicated by a …","","","Gets n elements from memory starting from addr (n being …","","Gets the relocatable value corresponding to the …","Gets <code>n_ret</code> return values from memory","","","","","Inserts a value into a memory address given by a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Writes data into the memory at address ptr and returns the …","","","","","","","","","","","","","","","","","","","","","","","","Makes sure that all assigned memory cells are consistent …","","","","","","Writes args into the memory at address ptr and returns the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Inserts an MaybeRelocatable value into an address given by …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Relocates the memory according to the relocation rules and …","","","","","","","","Applies validation_rules to the current memory","","","","","Adds a new segment and returns its starting location as a …","Adds a new temporary segment and returns its starting …","","","Calculates the size (number of non-none elements) of each …","","","","","Returns the argument unchanged.","","","","","Returns the number of used segments when they are already …","Calls <code>U::from(self)</code>.","","Writes data into the memory at address ptr and returns the …","","","","","Returns a vector that contains the first relocated address …","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,22,22,17,15,22,17,15,22,15,15,22,17,15,22,22,17,15,15,22,15,22,17,15,22,17,15,22,17,15,22,17,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,26,24,25,26,24,25,26,24,25,26,24,25,26,25,25,24,24,25,26,24,25,26,24,25,26,25,24,24,25,25,24,25,26,24,24,25,24,25,25,24,25,26,24,24,25,26,24,25,26,24,25,26,24,25,26,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,4,21,21,4,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,49,0,49,0,38,39,48,51,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,51,41,38,39,13,40,41,42,43,44,45,46,47,48,49,50,38,39,13,40,41,42,43,44,45,46,47,48,49,50,38,51,51,13,50,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,0,0,0,0,0,0,43,43,42,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,38,39,13,40,41,42,43,44,45,46,47,48,49,50,45,38,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,40,43,13,51,44,51,43,44,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,46,40,46,42,13,50,13,41,50,50,43,40,48,51,39,51,47,43,43,42,38,39,13,40,41,42,43,44,45,46,47,48,49,50,43,43,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,40,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,40,42,48,50,51,38,39,13,40,41,42,43,52,44,45,46,47,48,49,50,57,57,57,0,57,57,57,57,57,57,57,0,0,57,57,57,57,57,0,0,0,0,0,0,0,0,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,66,68,72,69,71,71,71,0,73,73,72,66,68,0,68,0,70,70,70,69,73,68,69,0,0,0,0,70,71,72,0,73,69,67,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,66,66,67,66,67,68,69,70,71,72,73,66,66,67,68,69,70,71,72,73,67,66,67,68,69,70,71,72,73,67,66,67,68,69,70,71,72,73,67,67,67,67,67,67,67,67,67,66,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,66,67,68,69,70,71,72,73,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,32,0,0,32,30,30,30,30,30,32,30,32,32,30,32,30,32,30,32,30,32,32,30,32,30,32,30,30,32,32,30,30,30,32,32,32,32,32,32,32,32,32,30,32,30,32,32,30,30,32,0,0,30,30,32,30,30,32,30,32,30,30,32,30,32,32,30,32,30,32,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,78,78,78,78,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,79,79,79,79,79,79,79,0,0,0,79,79,79,79,79,79,79,0,0,89,0,0,89,0,89,0,89,0,89,0,89,0,89,0,88,81,82,84,85,86,87,88,81,89,81,82,84,85,86,87,88,81,89,82,84,85,86,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,87,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,89,89,89,89,89,89,89,82,84,85,86,87,88,81,89,86,89,82,84,85,86,87,88,81,89,88,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,86,89,82,84,85,86,87,88,81,89,88,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,85,87,88,82,84,85,86,88,81,89,89,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,82,84,85,86,87,88,81,89,0,0,0,5,5,92,93,5,92,93,93,5,5,5,5,92,93,92,93,5,92,93,92,93,5,5,92,93,5,92,93,5,5,5,5,5,5,5,5,5,5,92,5,5,5,5,5,5,5,92,93,93,93,5,5,5,5,5,5,5,5,5,5,5,5,92,92,93,5,92,93,5,92,93,5,92,93,5,92,93,5,0,0,0,0,0,96,95,96,95,96,95,95,96,95,96,95,96,95,96,95,96,95,96,95,0,95,96,95,96,95,96,95,96,95,0,0,0,0,0,9,9,9,98,9,99,100,97,98,9,99,100,97,98,97,98,97,98,9,9,97,9,9,99,100,99,100,97,98,9,99,100,97,98,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,98,98,9,9,99,100,97,98,9,9,9,98,9,9,9,97,98,9,99,100,97,98,9,99,100,97,98,9,99,100,97,98,9,9,99,100,97,98,9,0,0,0,0,83,101,83,101,83,83,83,101,83,83,83,83,83,83,83,83,101,83,83,83,83,101,83,101,83,101,83,83,83,101,83,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91],"f":[0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3,2,3,4],[[7,[5,6]]]],[1,8],[1,8],[[5,9],[[7,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,10,10,10],[[11,[10]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],0,0,0,[[15,16,[18,[17]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[15,9,19,20,12],[[7,[14]]]],0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[[12,[16,[18,[17]]]]],15],[[16,[12,[16,21]]],22],[[],15],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[]],[[]],[[]],0,[[9,12,13,12],[[7,[14]]]],[[9,12,13,12],[[7,[14]]]],[[9,12,13,12],[[7,[14]]]],[[9,12,13,12],[[7,[14]]]],[[9,12,13],[[7,[14]]]],0,[[9,19,12,13],[[7,[14]]]],[[9,19],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[25,25],[26,26],[[]],[[]],[[]],0,0,[[],24],[[24,24],3],[[25,25],3],[[26,26],3],[[24,27],28],[[25,27],28],[[26,27],28],[[]],[[]],[[]],[25,[[12,[29,29]]]],[[24,30],[[7,[25,14]]]],[[24,30],[[7,[25,14]]]],[[25,29],[[7,[29,14]]]],[[25,29,29]],[[]],[[]],[[]],[[],24],[[24,9,29,[31,[[12,[29,29]]]]],[[7,[32,14]]]],[[30,29,[31,[[12,[29,29]]]]],25],[[24,9,[12,[29,29]]],[[7,[32,14]]]],[30,25],[[30,[12,[29,29]]],25],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[]],[[]],[[]],0,0,[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[2,9,12,13],[[7,[32,14]]]],[[2,9,12,13],[[7,[[33,[29]],14]]]],[[2,9,12,13],[[7,[30,14]]]],[[2,12],[[7,[21,14]]]],[[2,9,12,13],[[7,[30,14]]]],[[2,[34,[32]],9,12,13],[[7,[14]]]],[[9,[34,[32]]],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19],[[7,[14]]]],[[9,19],[[7,[14]]]],[19,[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[9,[[7,[14]]]],[19,[[7,[14]]]],[19,[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],0,0,0,0,0,[[9,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[19,12],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[19,12],[[7,[14]]]],[[19,12],[[7,[14]]]],[[9,19],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,12,13,12],[[7,[14]]]],0,0,0,0,0,0,0,0,0,[[29,29,29,29],29],[[30,9],[[7,[29,14]]]],[[2,9,12,13],[[7,[29,14]]]],[[29,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[19,12],[[7,[14]]]],[[9,19,12,13,12],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[19,[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[19,[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[19,[[7,[14]]]],[19,[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],[[9,19,12,13],[[7,[14]]]],0,0,0,[[]],[[]],0,[21,21],[[]],[[2,13,12,12],[[7,[[20,[35]],14]]]],0,[[21,21],3],[[9,19,20,12],[[7,[14]]]],[[21,27],28],[[]],[[]],[[36,36,3,3],21],[36,21],0,0,[[]],[[],7],[[],7],[[],23],[[]],[29,[[7,[10,14]]]],[29,[[7,[37,14]]]],[[21,9,13],[[7,[30,14]]]],[[9,21,13],[[7,[[33,[29]],14]]]],[[9,21,13],[[7,[30,14]]]],[[[34,[32]],9,21,13],[[7,[14]]]],[[29,29],29],[[29,29,29],29],[29],[[29,29]],[[29,29],29],[29,[[7,[29,14]]]],[29,29],[[29,29],[[7,[29,14]]]],[[37,37],[[7,[37,14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38,38],[39,39],[13,13],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],13],0,[[],[[7,[51]]]],[[],[[7,[38]]]],[[],[[7,[39]]]],[[],[[7,[13]]]],[[],[[7,[40]]]],[[],[[7,[41]]]],[[],[[7,[42]]]],[[],[[7,[43]]]],[[],[[7,[52]]]],[[],[[7,[44]]]],[[],[[7,[45]]]],[[],[[7,[46]]]],[[],[[7,[47]]]],[[],[[7,[48]]]],[[],[[7,[49]]]],[[],[[7,[50]]]],[53,[[7,[[11,[32]]]]]],[53,[[7,[29]]]],[53,[[7,[[12,[16,37]]]]]],[[54,[31,[2]]],[[7,[55,56]]]],[54,[[7,[51,56]]]],[53,[[7,[50]]]],0,0,0,[[38,38],3],[[39,39],3],[[13,13],3],[[40,40],3],[[41,41],3],[[42,42],3],[[43,43],3],[[52,52],3],[[44,44],3],[[45,45],3],[[46,46],3],[[47,47],3],[[48,48],3],[[49,49],3],[[50,50],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[51,27],28],[[38,27],28],[[39,27],28],[[13,27],28],[[40,27],28],[[41,27],28],[[42,27],28],[[43,27],28],[[52,27],28],[[44,27],28],[[45,27],28],[[46,27],28],[[47,27],28],[[48,27],28],[[49,27],28],[[50,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[43,16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],13],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,16],16],[[43,16],16],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[57,57],3],[[57,27],28],[[57,27],28],[[]],[[]],[16,16],[2,[[58,[2,50]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[56,27],28],[[56,27],28],[[]],[59,56],[60,56],[[]],[61],[56,[[31,[62]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,[[19,2,[20,[35]]]],[[]],[[]],0,[[],19],[[19,2]],[[19,[12,[16,[20,[35]]]]]],[19,[[7,[63]]]],[[]],[[19,2],[[7,[[0,[35,64]],14]]]],[[19,2],[[7,[20,14]]]],[[19,2],[[7,[20,14]]]],[19,[[7,[[18,[[65,[24]]]],14]]]],[[19,2],[[7,[[11,[[0,[35,64]]]],14]]]],[[19,2],[[7,[11,14]]]],[19,[[7,[12,14]]]],[19,[[7,[12,14]]]],[[19,2],[[7,[12,14]]]],[[19,2],[[7,[11,14]]]],[[19,2],[[7,[14]]]],[[19,2],[[7,[14]]]],[[19,2,[20,[35]]]],[[19,2]],[[]],[[],19],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[[]],[[],[[7,[66]]]],0,[[66,66],3],[[67,67],3],[[68,68],3],[[69,69],3],[[70,70],3],[[71,71],3],[[72,72],3],[[73,73],3],[[],3],[[66,27],28],[[67,27],28],[[68,27],28],[[69,27],28],[[70,27],28],[[71,27],28],[[72,27],28],[[73,27],28],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[67,37],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[55,55],[[]],0,0,[[],55],0,[[55,55],3],[[],3],0,[[55,27],28],[[]],[[1,[31,[2]]],[[7,[55,56]]]],[[54,[31,[2]]],[[7,[55,56]]]],0,0,0,[[]],0,[[[11,[16]],29,[11,[32]],[31,[37]],[12,[37,[11,[38]]]],47,[12,[16,40]],[11,[42]],[31,[[12,[37,44]]]]],[[7,[55,56]]]],0,0,0,[[]],[[],7],[[],7],[[],23],[[]],0,0,0,0,[[30,37]],[[30,37],30],[[30,36],30],[[30,36],30],[[30,29,29],[[7,[30,14]]]],[[32,29,29],[[7,[32,14]]]],[[30,32,29],[[7,[30,14]]]],[[32,32,29],[[7,[32,14]]]],[[32,37,[31,[29]]],32],[[]],[[]],[[]],[[]],[30,30],[32,32],[[]],[[]],[[32,32],[[7,[14]]]],[[30,30],3],[[32,32],3],[[],3],[[],3],[[30,27],28],[[30,27],28],[[32,27],28],[[32,27],28],[[]],[30,30],[[],30],[32,32],[[]],[30,32],[29,32],[30,32],[29,32],[[],32],[32,[[7,[29,14]]]],[32,[[7,[30,14]]]],[30],[32],[[]],[[]],[[32,29],[[7,[32,14]]]],0,[[30,30],[[31,[74]]]],[[32,32],[[31,[74]]]],[[30,11],[[7,[37,75]]]],[[32,11],[[7,[29,75]]]],0,[[30,37],[[7,[30,14]]]],[[32,32,29],[[7,[32,14]]]],[[30,30],[[7,[37,14]]]],[[]],[[]],[[],16],[[],16],[[],7],[32,[[7,[30,75]]]],[[],7],[[],7],[[],7],[32,[[7,[30,75]]]],[[],23],[[],23],[[]],[[]],[30],[[],3],[[29,29],29],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[76,67],[[7,[30,14]]]],[[76,67],[[7,[30,14]]]],[[76,67,[31,[32]]],[[7,[30,14]]]],[[]],[76,30],[76,30],[76,30],[[]],[[],7],[[],7],[[],23],[[]],0,[[77,[31,[29]]],[[7,[67,14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[6,27],28],[[6,27],28],[75,6],[78,6],[[]],[79,6],[14,6],[56,6],[80,6],[[]],[61],[6,[[31,[62]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,[[]],[[]],[[63,63],3],[[],3],[[63,27],28],[[63,27],28],[[]],[63],[[]],[61],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[75,75],3],[[75,27],28],[[75,27],28],[[]],[[]],[61],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[80,80],3],[[80,27],28],[[80,27],28],[75,80],[[]],[[]],[61],[80,[[31,[62]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,[[]],[[]],[[78,78],3],[[78,27],28],[[78,27],28],[[]],[75,78],[[]],[61],[78,[[31,[62]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[14,14],3],[[14,27],28],[[14,27],28],[78,14],[80,14],[75,14],[63,14],[[]],[[]],[61],[14,[[31,[62]]]],[[],16],[[],7],[[],7],[[],23],[[]],0,[[]],[[]],[[79,79],3],[[79,27],28],[[79,27],28],[[]],[[5,9,14],79],[[37,5],[[31,[16]]]],[[37,5,[31,[37]]],[[31,[43]]]],[[9,5],[[31,[16]]]],[[]],[61],[[],16],[[],7],[[],7],[[],23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[81,30],[[7,[75]]]],[[82,83],[[7,[80]]]],[[84,83],[[7,[80]]]],[[85,83],[[7,[80]]]],[[86,83],[[7,[80]]]],[[87,83],[[7,[80]]]],[[88,83],[[7,[80]]]],[[81,83],[[7,[80]]]],[[89,83],[[7,[80]]]],[81,35],[82,90],[84,90],[85,90],[86,90],[87,90],[88,90],[81,90],[89,90],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[84,84],[85,85],[86,86],[87,87],[88,88],[81,81],[89,89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,30,83],[[7,[[31,[32]],80]]]],[[84,30,83],[[7,[[31,[32]],80]]]],[[85,30,83],[[7,[[31,[32]],80]]]],[[86,30,83],[[7,[[31,[32]],80]]]],[[87,30,83],[[7,[[31,[32]],80]]]],[[88,30,83],[[7,[[31,[32]],80]]]],[[81,30,83],[[7,[[31,[32]],80]]]],[[89,30,83],[[7,[[31,[32]],80]]]],[[],87],[[82,9,30],[[7,[80]]]],[[84,9,30],[[7,[80]]]],[[85,9,30],[[7,[80]]]],[[86,9,30],[[7,[80]]]],[[87,9,30],[[7,[80]]]],[[88,9,30],[[7,[80]]]],[[81,9,30],[[7,[80]]]],[[89,9,30],[[7,[80]]]],[[82,27],28],[[84,27],28],[[85,27],28],[[86,27],28],[[87,27],28],[[88,27],28],[[81,27],28],[[89,27],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,89],[82,89],[84,89],[[]],[85,89],[87,89],[88,89],[81,89],[[82,9],[[7,[37,75]]]],[[84,9],[[7,[37,75]]]],[[85,9],[[7,[37,75]]]],[[86,9],[[7,[37,75]]]],[[87,9],[[7,[37,75]]]],[[88,9],[[7,[37,75]]]],[[81,9],[[7,[37,75]]]],[[89,9],[[7,[37,75]]]],[[86,9],[[7,[[11,[30]],75]]]],[[89,9],[[7,[[11,[30]],75]]]],[82],[84],[85],[86],[87],[88],[81],[89],[[88,83],31],[[89,83],31],[[82,9],[[7,[37,75]]]],[[84,9],[[7,[37,75]]]],[[85,9],[[7,[37,75]]]],[[86,9],[[7,[37,75]]]],[[87,9],[[7,[37,75]]]],[[88,9],[[7,[37,75]]]],[[81,9],[[7,[37,75]]]],[[89,9],[[7,[37,75]]]],[[82,9],[[7,[75]]]],[[84,9],[[7,[75]]]],[[85,9],[[7,[75]]]],[[86,9],[[7,[75]]]],[[87,9],[[7,[75]]]],[[88,9],[[7,[75]]]],[[81,9],[[7,[75]]]],[[89,9],[[7,[75]]]],[[82,10,10],37],[[86,10],37],[[89,10,10],37],[[82,9],[[7,[37,75]]]],[[84,9],[[7,[37,75]]]],[[85,9],[[7,[37,75]]]],[[86,9],[[7,[37,75]]]],[[87,9],[[7,[37,75]]]],[[88,9],[[7,[37,75]]]],[[81,9],[[7,[37,75]]]],[[89,9],[[7,[37,75]]]],[[88,9],[[7,[37,75]]]],[[89,9],[[7,[37,75]]]],[82,[[11,[32]]]],[84,[[11,[32]]]],[85,[[11,[32]]]],[86,[[11,[32]]]],[87,[[11,[32]]]],[88,[[11,[32]]]],[81,[[11,[32]]]],[89,[[11,[32]]]],[[82,91,83]],[[84,91,83]],[[85,91,83]],[[86,91,83]],[[87,91,83]],[[88,91,83]],[[81,91,83]],[[89,91,83]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,3],85],[3,87],[[10,10,3],88],[82,10],[84,10],[85,10],[86,10],[88,10],[81,10],[89,[[31,[10]]]],[[89,9],[[7,[14]]]],[[89,37]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[5,9],30],[[]],[[]],[[]],[[]],[[]],[[]],0,[[5,9],[[7,[14]]]],[[5,9],[[7,[14]]]],[[5,9],[[7,[14]]]],[[5,9],[[7,[14]]]],[92,92],[93,93],[[]],[[]],[[5,3,3,9,4],[[7,[14]]]],[[92,92],3],[[93,93],3],[[],3],[[],3],0,[[5,9],[[7,[80]]]],[[92,27],28],[[93,27],28],[[]],[[]],[[]],[[5,9],[[7,[[12,[2,92]],80]]]],[5,12],[[5,9],[[7,[93,78]]]],[[5,12,4],[[7,[[12,[37,[11,[[20,[35]]]]]],14]]]],[5,[[31,[30]]]],[[5,9],[[7,[37,75]]]],[[5,9],[[7,[16,80]]]],[[5,9],[[7,[31,14]]]],[5,11],[5,[[12,[37,21]]]],0,[[5,9],[[7,[30,80]]]],[[5,9],[[7,[80]]]],[[5,9,37,[11,[32]],32],[[7,[30,80]]]],[[5,9],[[7,[80]]]],[[5,9,[31,[30]]]],[[5,9],[[7,[80]]]],[[]],[[]],[[]],0,0,[[55,2,3],[[7,[5,80]]]],0,[[5,9],[[7,[80]]]],[[5,9],[[7,[78]]]],0,0,[[5,37,9,4],[[7,[14]]]],[[5,37,[11,[35]],3,3,3,9,4],[[7,[14]]]],[[5,9,4],[[7,[14]]]],[[5,30,9,4],[[7,[14]]]],[[5,37,9,4],[[7,[14]]]],[[5,[31,[2]]],[[7,[56]]]],0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[5,9,94],[[7,[80]]]],[[5,3,9],[[7,[14]]]],[83,[[7,[31,14]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[7,[95]]]],[[96,96],3],[[95,95],3],[[96,27],28],[[95,27],28],0,0,[[]],[[]],[[]],[[]],0,0,[[30,11],[[7,[37,78]]]],[95,7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[]],[[]],0,0,0,0,0,[9,30],[[9,30,30],[[7,[75]]]],[9,30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[98,98],[[]],[[]],[9,11],[[9,67],[[7,[14]]]],[[],97],[9],[[9,19],[[7,[14]]]],[[99,99],3],[[100,100],3],[[99,27],28],[[100,27],28],[[97,27],28],[[98,27],28],[[]],[[]],[[]],[[]],[[]],[[9,35,[31,[29]]],[[7,[32,14]]]],[[9,[11,[35]]],[[7,[[11,[32]],14]]]],[9,30],[9,11],[9,11],[[9,32,37],[[7,[[11,[32]],75]]]],[9,30],[[9,30],[[7,[[33,[29]],14]]]],[[9,30,37],[[7,[[11,[[33,[29]]]],14]]]],[9,[[7,[[31,[32]],75]]]],[9,30],[9,29],[[9,32,37],[[7,[[11,[[31,[[33,[32]]]]]],75]]]],[9,[[7,[88,14]]]],[[9,30],[[7,[30,14]]]],[[9,37],[[7,[[11,[32]],75]]]],[[9,37],[[31,[37]]]],[9,[[7,[81,14]]]],0,0,[[9,30,[34,[32]]],[[7,[14]]]],[[]],[[]],[[]],[[]],[[]],[[9,32,[11,[32]]],[[7,[32,75]]]],[[9,30,37],[[7,[14]]]],[[29,3,[11,[42]]],9],[[2,[12,[16,37]],13],98],[[9,4,19,12,12],[[7,[14]]]],[[9,4,19,12,12],[[7,[14]]]],[9,[[7,[14]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[],23],[[],23],[[],23],[9,[[7,[14]]]],[[]],[[]],[[]],[[]],[[]],[[9,30,35],[[7,[32,75]]]],0,0,0,0,[[83,37,101]],[[]],[[]],[[]],[[]],0,[[],83],[[]],[[]],[[83,32,37],[[7,[[11,[32]],75]]]],[[83,30],[[7,[[33,[29]],14]]]],[[83,30,37],[[7,[[11,[[33,[29]]]],14]]]],[[83,32,37],[[7,[[11,[[31,[[33,[32]]]]]],75]]]],[[83,30],[[7,[30,14]]]],[83,[[7,[75]]]],[[83,30,[34,[32]]],[[7,[14]]]],[[]],[[]],[[],83],[83,[[7,[75]]]],0,[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[83,[[7,[75]]]],0,[[]],[[]],0,[[91,83],30],[[91,83],30],[[]],[[]],[[91,83],11],[[],91],[[91,91],3],[[],3],[[91,27],28],[[]],[[91,35,[31,[29]],83],[[7,[32,14]]]],[[91,[11,[35]],9],[[7,[[11,[32]],14]]]],[[91,102],[[7,[37,75]]]],[[91,37],[[31,[37]]]],[[91,37],[[31,[37]]]],[[]],[[91,32],[[7,[3,75]]]],[[91,83,32,[11,[32]]],[[7,[32,75]]]],[[],91],0,0,0,[91,[[7,[[11,[37]],75]]]],0,0,[[],7],[[],7],[[],23],[[]],[[91,83,30,35,[31,[29]]],[[7,[32,75]]]]],"p":[[3,"Path"],[15,"str"],[15,"bool"],[8,"HintProcessor"],[3,"CairoRunner"],[4,"CairoRunError"],[4,"Result"],[6,"Result"],[3,"VirtualMachine"],[15,"u32"],[3,"Vec"],[3,"HashMap"],[3,"ApTracking"],[4,"VirtualMachineError"],[3,"BuiltinHintProcessor"],[3,"String"],[3,"HintFunc"],[3,"Rc"],[3,"ExecutionScopes"],[3,"Box"],[3,"HintReference"],[3,"HintProcessorData"],[3,"TypeId"],[3,"DictManager"],[3,"DictTracker"],[4,"Dictionary"],[3,"Formatter"],[6,"Result"],[3,"BigInt"],[3,"Relocatable"],[4,"Option"],[4,"MaybeRelocatable"],[4,"Cow"],[8,"Into"],[8,"Any"],[15,"i32"],[15,"usize"],[3,"HintParams"],[3,"FlowTrackingData"],[3,"Identifier"],[3,"Member"],[3,"Attribute"],[3,"Location"],[3,"InstructionLocation"],[3,"InputFile"],[3,"HintLocation"],[3,"ReferenceManager"],[3,"Reference"],[4,"OffsetValue"],[3,"ValueAddress"],[3,"ProgramJson"],[3,"DebugInfo"],[8,"Deserializer"],[8,"Read"],[3,"Program"],[4,"ProgramError"],[4,"ReferenceParseError"],[6,"IResult"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"ExecScopeError"],[8,"Clone"],[3,"RefCell"],[4,"Register"],[3,"Instruction"],[4,"Op1Addr"],[4,"Res"],[4,"PcUpdate"],[4,"ApUpdate"],[4,"FpUpdate"],[4,"Opcode"],[4,"Ordering"],[4,"MemoryError"],[3,"RunContext"],[15,"i64"],[4,"TraceError"],[3,"VmException"],[4,"RunnerError"],[3,"SignatureBuiltinRunner"],[3,"BitwiseBuiltinRunner"],[3,"Memory"],[3,"EcOpBuiltinRunner"],[3,"HashBuiltinRunner"],[3,"KeccakBuiltinRunner"],[3,"OutputBuiltinRunner"],[3,"RangeCheckBuiltinRunner"],[4,"BuiltinRunner"],[15,"isize"],[3,"MemorySegmentManager"],[3,"SegmentInfo"],[3,"ExecutionResources"],[8,"Write"],[3,"RelocatedTraceEntry"],[3,"TraceEntry"],[3,"DeducedOperands"],[3,"HintData"],[3,"Operands"],[3,"OperandsAddresses"],[3,"ValidationRule"],[8,"Iterator"],[13,"DefaultDictionary"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
